//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SceneIdComponent sceneId { get { return (SceneIdComponent)GetComponent(GameComponentsLookup.SceneId); } }
    public bool hasSceneId { get { return HasComponent(GameComponentsLookup.SceneId); } }

    public void AddSceneId(string newId) {
        var index = GameComponentsLookup.SceneId;
        var component = (SceneIdComponent)CreateComponent(index, typeof(SceneIdComponent));
        component.Id = newId;
        AddComponent(index, component);
    }

    public void ReplaceSceneId(string newId) {
        var index = GameComponentsLookup.SceneId;
        var component = (SceneIdComponent)CreateComponent(index, typeof(SceneIdComponent));
        component.Id = newId;
        ReplaceComponent(index, component);
    }

    public void RemoveSceneId() {
        RemoveComponent(GameComponentsLookup.SceneId);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSceneId;

    public static Entitas.IMatcher<GameEntity> SceneId {
        get {
            if (_matcherSceneId == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SceneId);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSceneId = matcher;
            }

            return _matcherSceneId;
        }
    }
}
