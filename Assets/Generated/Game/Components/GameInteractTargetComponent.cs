//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InteractTargetComponent interactTarget { get { return (InteractTargetComponent)GetComponent(GameComponentsLookup.InteractTarget); } }
    public bool hasInteractTarget { get { return HasComponent(GameComponentsLookup.InteractTarget); } }

    public void AddInteractTarget(string newTargetEntityId) {
        var index = GameComponentsLookup.InteractTarget;
        var component = (InteractTargetComponent)CreateComponent(index, typeof(InteractTargetComponent));
        component.TargetEntityId = newTargetEntityId;
        AddComponent(index, component);
    }

    public void ReplaceInteractTarget(string newTargetEntityId) {
        var index = GameComponentsLookup.InteractTarget;
        var component = (InteractTargetComponent)CreateComponent(index, typeof(InteractTargetComponent));
        component.TargetEntityId = newTargetEntityId;
        ReplaceComponent(index, component);
    }

    public void RemoveInteractTarget() {
        RemoveComponent(GameComponentsLookup.InteractTarget);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInteractTarget;

    public static Entitas.IMatcher<GameEntity> InteractTarget {
        get {
            if (_matcherInteractTarget == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InteractTarget);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInteractTarget = matcher;
            }

            return _matcherInteractTarget;
        }
    }
}
